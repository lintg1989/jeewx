[INFO][2017-06-16 15:03:16,272][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { org.jeecgframework.web.cgform.dao.config.CgFormFieldDao }
[INFO][2017-06-16 15:03:16,273][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { org.jeecgframework.web.cgform.dao.config.CgFormVersionDao }
[INFO][2017-06-16 15:03:16,276][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { org.jeecgframework.web.cgform.dao.upload.CgFormUploadDao }
[INFO][2017-06-16 15:03:16,276][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { org.jeecgframework.web.cgreport.dao.core.CgReportDao }
[INFO][2017-06-16 15:03:16,276][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { org.jeecgframework.web.demo.dao.test.JeecgMinidaoDao }
[INFO][2017-06-16 15:03:16,276][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { org.jeecgframework.web.system.dao.JeecgDictDao }
[INFO][2017-06-16 15:03:16,276][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { org.jeecgframework.web.system.dao.repair.RepairDao }
[INFO][2017-06-16 15:03:16,276][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { weixin.cms.dao.CmsAdDao }
[INFO][2017-06-16 15:03:16,276][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { weixin.cms.dao.CmsArticleDao }
[INFO][2017-06-16 15:03:16,276][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { weixin.cms.dao.CmsMenuDao }
[INFO][2017-06-16 15:03:16,276][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { weixin.guanjia.message.dao.TextTemplateDao }
[INFO][2017-06-16 15:03:16,276][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.core.biz.dao.TSOperationDao }
[INFO][2017-06-16 15:03:16,276][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.core.biz.mutiLang.dao.P3MutiLangDao }
[INFO][2017-06-16 15:03:16,276][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.core.biz.tag.select.dict.dao.TSTypeDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.core.biz.tag.select.table.dao.CustomTableDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.actInvite.dao.WxActInviteDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.auth.dao.JwSystemAuthDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.domo.order.dao.JpDemoOrderCustomDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.domo.order.dao.JpDemoOrderMainDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.domo.order.dao.JpDemoOrderProductDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.account.dao.QywxAccountDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.account.dao.QywxAgentDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.account.dao.QywxMenuDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.base.dao.QywxAutoresponseDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.base.dao.QywxAutoresponseDefaultDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.base.dao.QywxGroupDao }
[INFO][2017-06-16 15:03:16,277][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.base.dao.QywxGzentityDao }
[INFO][2017-06-16 15:03:16,278][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.base.dao.QywxGzuserinfoDao }
[INFO][2017-06-16 15:03:16,282][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.base.dao.QywxLocationDao }
[INFO][2017-06-16 15:03:16,282][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.base.dao.QywxMessagelogDao }
[INFO][2017-06-16 15:03:16,282][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.base.dao.QywxReceivetextDao }
[INFO][2017-06-16 15:03:16,282][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.conversation.dao.QywxConversationDao }
[INFO][2017-06-16 15:03:16,282][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.sucai.dao.QywxNewsitemDao }
[INFO][2017-06-16 15:03:16,282][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.sucai.dao.QywxNewstemplateDao }
[INFO][2017-06-16 15:03:16,282][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.qywx.sucai.dao.QywxTexttemplateDao }
[INFO][2017-06-16 15:03:16,282][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.alipay.account.dao.AlipayAccountDao }
[INFO][2017-06-16 15:03:16,282][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.alipay.account.dao.AlipayMenuDao }
[INFO][2017-06-16 15:03:16,282][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.alipay.base.dao.AlipayAutoresponseDao }
[INFO][2017-06-16 15:03:16,282][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.alipay.base.dao.AlipayAutoresponseDefaultDao }
[INFO][2017-06-16 15:03:16,283][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.alipay.base.dao.AlipayGzentityDao }
[INFO][2017-06-16 15:03:16,283][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.alipay.base.dao.AlipayGzuserinfoDao }
[INFO][2017-06-16 15:03:16,283][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.alipay.base.dao.AlipayMessagelogDao }
[INFO][2017-06-16 15:03:16,283][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.alipay.base.dao.AlipayReceivetextContentDao }
[INFO][2017-06-16 15:03:16,283][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.alipay.base.dao.AlipayReceivetextDao }
[INFO][2017-06-16 15:03:16,283][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.alipay.sucai.dao.AlipayNewsitemDao }
[INFO][2017-06-16 15:03:16,283][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.alipay.sucai.dao.AlipayNewstemplateDao }
[INFO][2017-06-16 15:03:16,286][org.jeecgframework.minidao.aop.MiniDaoHandler]register minidao name is { com.jeecg.alipay.sucai.dao.AlipayTexttemplateDao }
[ERROR][2017-06-16 15:03:18,223][com.alibaba.druid.pool.DruidAbstractDataSource]maxIdle is deprecated
[INFO][2017-06-16 15:03:18,311][com.alibaba.druid.pool.DruidDataSource]{dataSource-1} inited
[INFO][2017-06-16 15:03:19,148][com.alibaba.druid.pool.DruidDataSource]{dataSource-1} closed
[ERROR][2017-06-16 15:03:19,149][org.springframework.web.context.ContextLoader]Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'freemarker' defined in file [E:\ideaworkspace\jeewx\jeewx\target\classes\spring-mvc-cgform.xml]: Initialization of bean failed; nested exception is org.springframework.beans.FatalBeanException: Failed to obtain BeanInfo for class [freemarker.template.Configuration]; nested exception is java.beans.IntrospectionException: type mismatch between read and write methods
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:585)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:913)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:464)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:385)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:284)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4135)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4630)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:785)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:445)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
	at org.codehaus.mojo.tomcat.AbstractRunMojo.startContainer(AbstractRunMojo.java:558)
	at org.codehaus.mojo.tomcat.AbstractRunMojo.execute(AbstractRunMojo.java:255)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.springframework.beans.FatalBeanException: Failed to obtain BeanInfo for class [freemarker.template.Configuration]; nested exception is java.beans.IntrospectionException: type mismatch between read and write methods
	at org.springframework.beans.CachedIntrospectionResults.<init>(CachedIntrospectionResults.java:262)
	at org.springframework.beans.CachedIntrospectionResults.forClass(CachedIntrospectionResults.java:149)
	at org.springframework.beans.BeanWrapperImpl.getCachedIntrospectionResults(BeanWrapperImpl.java:324)
	at org.springframework.beans.BeanWrapperImpl.getPropertyDescriptors(BeanWrapperImpl.java:331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.filterPropertyDescriptorsForDependencyCheck(AbstractAutowireCapableBeanFactory.java:1242)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1101)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	... 42 more
Caused by: java.beans.IntrospectionException: type mismatch between read and write methods
	at java.beans.PropertyDescriptor.findPropertyType(PropertyDescriptor.java:661)
	at java.beans.PropertyDescriptor.setReadMethod(PropertyDescriptor.java:257)
	at org.springframework.beans.ExtendedBeanInfo.addOrUpdatePropertyDescriptor(ExtendedBeanInfo.java:282)
	at org.springframework.beans.ExtendedBeanInfo.addOrUpdatePropertyDescriptor(ExtendedBeanInfo.java:180)
	at org.springframework.beans.ExtendedBeanInfo.<init>(ExtendedBeanInfo.java:100)
	at org.springframework.beans.CachedIntrospectionResults.<init>(CachedIntrospectionResults.java:224)
	... 48 more
